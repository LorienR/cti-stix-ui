{"version":3,"sources":["cti-stix-ui/tests/adapters/application.jshint.js","cti-stix-ui/tests/app.jshint.js","cti-stix-ui/tests/components/alert-modal.jshint.js","cti-stix-ui/tests/components/course-of-action-collection.jshint.js","cti-stix-ui/tests/components/delete-modal.jshint.js","cti-stix-ui/tests/components/help-card.jshint.js","cti-stix-ui/tests/components/input-date-field.jshint.js","cti-stix-ui/tests/components/navigation-bar.jshint.js","cti-stix-ui/tests/components/object-type-select.jshint.js","cti-stix-ui/tests/components/phase-group-summary-card.jshint.js","cti-stix-ui/tests/components/pie-plot.jshint.js","cti-stix-ui/tests/components/tooltip-block.jshint.js","cti-stix-ui/tests/controllers/attack-pattern-new.jshint.js","cti-stix-ui/tests/controllers/attack-patterns.jshint.js","cti-stix-ui/tests/controllers/course-of-action-new.jshint.js","cti-stix-ui/tests/controllers/course-of-actions.jshint.js","cti-stix-ui/tests/controllers/relationship-grid.jshint.js","cti-stix-ui/tests/controllers/relationship-new.jshint.js","cti-stix-ui/tests/controllers/relationships.jshint.js","cti-stix-ui/tests/controllers/report-dashboard.jshint.js","cti-stix-ui/tests/controllers/report-kill-chain-phase.jshint.js","cti-stix-ui/tests/controllers/report-mitigates-rating.jshint.js","cti-stix-ui/tests/controllers/report-new.jshint.js","cti-stix-ui/tests/controllers/reports.jshint.js","cti-stix-ui/tests/controllers/threat-actor-new.jshint.js","cti-stix-ui/tests/controllers/threat-actors.jshint.js","cti-stix-ui/tests/helpers/destroy-app.js","cti-stix-ui/tests/helpers/destroy-app.jshint.js","cti-stix-ui/tests/helpers/ember-keyboard/register-test-helpers.js","cti-stix-ui/tests/helpers/get-array-value.jshint.js","cti-stix-ui/tests/helpers/identifier-summarized.jshint.js","cti-stix-ui/tests/helpers/identifier-type.jshint.js","cti-stix-ui/tests/helpers/module-for-acceptance.js","cti-stix-ui/tests/helpers/module-for-acceptance.jshint.js","cti-stix-ui/tests/helpers/resolver.js","cti-stix-ui/tests/helpers/resolver.jshint.js","cti-stix-ui/tests/helpers/start-app.js","cti-stix-ui/tests/helpers/start-app.jshint.js","cti-stix-ui/tests/helpers/style-width.jshint.js","cti-stix-ui/tests/helpers/undasherize-label.jshint.js","cti-stix-ui/tests/integration/components/relationships-graph-test.js","cti-stix-ui/tests/integration/components/relationships-graph-test.jshint.js","cti-stix-ui/tests/mixins/add-remove-external-references.jshint.js","cti-stix-ui/tests/mixins/add-remove-kill-chain-phases.jshint.js","cti-stix-ui/tests/mixins/add-remove-labels.jshint.js","cti-stix-ui/tests/mixins/delete-object-action.jshint.js","cti-stix-ui/tests/mixins/report-dashboard-mitigation.jshint.js","cti-stix-ui/tests/mixins/report-dashboard-model.jshint.js","cti-stix-ui/tests/models/attack-pattern.jshint.js","cti-stix-ui/tests/models/course-of-action.jshint.js","cti-stix-ui/tests/models/indicator.jshint.js","cti-stix-ui/tests/models/malware.jshint.js","cti-stix-ui/tests/models/marking-definition.jshint.js","cti-stix-ui/tests/models/relationship.jshint.js","cti-stix-ui/tests/models/report.jshint.js","cti-stix-ui/tests/models/threat-actor.jshint.js","cti-stix-ui/tests/models/tool.jshint.js","cti-stix-ui/tests/resolver.jshint.js","cti-stix-ui/tests/router.jshint.js","cti-stix-ui/tests/routes/application.jshint.js","cti-stix-ui/tests/routes/attack-pattern-new.jshint.js","cti-stix-ui/tests/routes/attack-pattern.jshint.js","cti-stix-ui/tests/routes/attack-patterns.jshint.js","cti-stix-ui/tests/routes/course-of-action-new.jshint.js","cti-stix-ui/tests/routes/course-of-action.jshint.js","cti-stix-ui/tests/routes/course-of-actions.jshint.js","cti-stix-ui/tests/routes/indicator.jshint.js","cti-stix-ui/tests/routes/indicators.jshint.js","cti-stix-ui/tests/routes/item.jshint.js","cti-stix-ui/tests/routes/malware.jshint.js","cti-stix-ui/tests/routes/relationship-grid.jshint.js","cti-stix-ui/tests/routes/relationship-new.jshint.js","cti-stix-ui/tests/routes/relationship.jshint.js","cti-stix-ui/tests/routes/relationships.jshint.js","cti-stix-ui/tests/routes/report-dashboard.jshint.js","cti-stix-ui/tests/routes/report-kill-chain-phase.jshint.js","cti-stix-ui/tests/routes/report-mitigates-rating.jshint.js","cti-stix-ui/tests/routes/report-new.jshint.js","cti-stix-ui/tests/routes/report.jshint.js","cti-stix-ui/tests/routes/reports.jshint.js","cti-stix-ui/tests/routes/threat-actor-new.jshint.js","cti-stix-ui/tests/routes/threat-actor.jshint.js","cti-stix-ui/tests/routes/threat-actors.jshint.js","cti-stix-ui/tests/routes/tool.jshint.js","cti-stix-ui/tests/serializers/application.jshint.js","cti-stix-ui/tests/services/attack-pattern.jshint.js","cti-stix-ui/tests/services/course-of-action.jshint.js","cti-stix-ui/tests/services/granular-marking.jshint.js","cti-stix-ui/tests/test-helper.js","cti-stix-ui/tests/test-helper.jshint.js","cti-stix-ui/tests/transitions.jshint.js","cti-stix-ui/tests/unit/routes/attack-patterns-test.js","cti-stix-ui/tests/unit/routes/attack-patterns-test.jshint.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["define('cti-stix-ui/tests/adapters/application.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | adapters/application.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'adapters/application.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/components/alert-modal.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/alert-modal.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/alert-modal.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/components/course-of-action-collection.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/course-of-action-collection.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/course-of-action-collection.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/components/delete-modal.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/delete-modal.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/delete-modal.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/components/help-card.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/help-card.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/help-card.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/components/input-date-field.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/input-date-field.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/input-date-field.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/components/navigation-bar.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/navigation-bar.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/navigation-bar.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/components/object-type-select.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/object-type-select.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/object-type-select.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/components/phase-group-summary-card.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/phase-group-summary-card.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/phase-group-summary-card.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/components/pie-plot.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/pie-plot.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/pie-plot.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/components/tooltip-block.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | components/tooltip-block.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/tooltip-block.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/controllers/attack-pattern-new.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/attack-pattern-new.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/attack-pattern-new.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/controllers/attack-patterns.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/attack-patterns.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/attack-patterns.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/controllers/course-of-action-new.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/course-of-action-new.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/course-of-action-new.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/controllers/course-of-actions.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/course-of-actions.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/course-of-actions.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/controllers/relationship-grid.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/relationship-grid.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/relationship-grid.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/controllers/relationship-new.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/relationship-new.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/relationship-new.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/controllers/relationships.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/relationships.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/relationships.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/controllers/report-dashboard.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/report-dashboard.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/report-dashboard.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/controllers/report-kill-chain-phase.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/report-kill-chain-phase.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/report-kill-chain-phase.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/controllers/report-mitigates-rating.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/report-mitigates-rating.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/report-mitigates-rating.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/controllers/report-new.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/report-new.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/report-new.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/controllers/reports.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/reports.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/reports.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/controllers/threat-actor-new.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/threat-actor-new.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/threat-actor-new.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/controllers/threat-actors.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | controllers/threat-actors.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/threat-actors.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/helpers/destroy-app', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = destroyApp;\n\n  function destroyApp(application) {\n    _ember['default'].run(application, 'destroy');\n  }\n});","define('cti-stix-ui/tests/helpers/destroy-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/destroy-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/destroy-app.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/helpers/ember-keyboard/register-test-helpers', ['exports', 'ember', 'ember-keyboard'], function (exports, _ember, _emberKeyboard) {\n\n  var keyEvent = function keyEvent(app, attributes, type) {\n    var event = attributes.split('+').reduce(function (event, attribute) {\n      if (['ctrl', 'meta', 'alt', 'shift'].indexOf(attribute) > -1) {\n        event[attribute + 'Key'] = true;\n      } else {\n        event.keyCode = (0, _emberKeyboard.getKeyCode)(attribute);\n      }\n\n      return event;\n    }, {});\n\n    return app.testHelpers.triggerEvent(document, type, event);\n  };\n\n  exports['default'] = function () {\n    _ember['default'].Test.registerAsyncHelper('keyDown', function (app, attributes) {\n      return keyEvent(app, attributes, 'keydown');\n    });\n\n    _ember['default'].Test.registerAsyncHelper('keyUp', function (app, attributes) {\n      return keyEvent(app, attributes, 'keyup');\n    });\n\n    _ember['default'].Test.registerAsyncHelper('keyPress', function (app, attributes) {\n      return keyEvent(app, attributes, 'keypress');\n    });\n  };\n});","define('cti-stix-ui/tests/helpers/get-array-value.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/get-array-value.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/get-array-value.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/helpers/identifier-summarized.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/identifier-summarized.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/identifier-summarized.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/helpers/identifier-type.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/identifier-type.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/identifier-type.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/helpers/module-for-acceptance', ['exports', 'qunit', 'ember', 'cti-stix-ui/tests/helpers/start-app', 'cti-stix-ui/tests/helpers/destroy-app'], function (exports, _qunit, _ember, _ctiStixUiTestsHelpersStartApp, _ctiStixUiTestsHelpersDestroyApp) {\n  var Promise = _ember['default'].RSVP.Promise;\n\n  exports['default'] = function (name) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    (0, _qunit.module)(name, {\n      beforeEach: function beforeEach() {\n        this.application = (0, _ctiStixUiTestsHelpersStartApp['default'])();\n\n        if (options.beforeEach) {\n          return options.beforeEach.apply(this, arguments);\n        }\n      },\n\n      afterEach: function afterEach() {\n        var _this = this;\n\n        var afterEach = options.afterEach && options.afterEach.apply(this, arguments);\n        return Promise.resolve(afterEach).then(function () {\n          return (0, _ctiStixUiTestsHelpersDestroyApp['default'])(_this.application);\n        });\n      }\n    });\n  };\n});","define('cti-stix-ui/tests/helpers/module-for-acceptance.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/module-for-acceptance.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/module-for-acceptance.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/helpers/resolver', ['exports', 'cti-stix-ui/resolver', 'cti-stix-ui/config/environment'], function (exports, _ctiStixUiResolver, _ctiStixUiConfigEnvironment) {\n\n  var resolver = _ctiStixUiResolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: _ctiStixUiConfigEnvironment['default'].modulePrefix,\n    podModulePrefix: _ctiStixUiConfigEnvironment['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n});","define('cti-stix-ui/tests/helpers/resolver.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/resolver.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/resolver.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/helpers/start-app', ['exports', 'ember', 'cti-stix-ui/app', 'cti-stix-ui/config/environment'], function (exports, _ember, _ctiStixUiApp, _ctiStixUiConfigEnvironment) {\n  exports['default'] = startApp;\n\n  function startApp(attrs) {\n    var application = undefined;\n\n    var attributes = _ember['default'].merge({}, _ctiStixUiConfigEnvironment['default'].APP);\n    attributes = _ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    _ember['default'].run(function () {\n      application = _ctiStixUiApp['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n});","define('cti-stix-ui/tests/helpers/start-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/start-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/start-app.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/helpers/style-width.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/style-width.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/style-width.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/helpers/undasherize-label.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | helpers/undasherize-label.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/undasherize-label.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/integration/components/relationships-graph-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleForComponent)('relationships-graph', 'Integration | Component | relationships graph', {\n    integration: true\n  });\n\n  (0, _emberQunit.test)('it renders', function (assert) {\n    // Set any properties with this.set('myProperty', 'value');\n    // Handle any actions with this.on('myAction', function(val) { ... });\n\n    this.render(Ember.HTMLBars.template((function () {\n      return {\n        meta: {\n          'revision': 'Ember@2.7.3',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 1,\n              'column': 23\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [['content', 'relationships-graph', ['loc', [null, [1, 0], [1, 23]]], 0, 0, 0, 0]],\n        locals: [],\n        templates: []\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), '');\n\n    // Template block usage:\n    this.render(Ember.HTMLBars.template((function () {\n      var child0 = (function () {\n        return {\n          meta: {\n            'revision': 'Ember@2.7.3',\n            'loc': {\n              'source': null,\n              'start': {\n                'line': 2,\n                'column': 4\n              },\n              'end': {\n                'line': 4,\n                'column': 4\n              }\n            }\n          },\n          isEmpty: false,\n          arity: 0,\n          cachedFragment: null,\n          hasRendered: false,\n          buildFragment: function buildFragment(dom) {\n            var el0 = dom.createDocumentFragment();\n            var el1 = dom.createTextNode('      template block text\\n');\n            dom.appendChild(el0, el1);\n            return el0;\n          },\n          buildRenderNodes: function buildRenderNodes() {\n            return [];\n          },\n          statements: [],\n          locals: [],\n          templates: []\n        };\n      })();\n\n      return {\n        meta: {\n          'revision': 'Ember@2.7.3',\n          'loc': {\n            'source': null,\n            'start': {\n              'line': 1,\n              'column': 0\n            },\n            'end': {\n              'line': 5,\n              'column': 2\n            }\n          }\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode('\\n');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment('');\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode('  ');\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          return morphs;\n        },\n        statements: [['block', 'relationships-graph', [], [], 0, null, ['loc', [null, [2, 4], [4, 28]]]]],\n        locals: [],\n        templates: [child0]\n      };\n    })()));\n\n    assert.equal(this.$().text().trim(), 'template block text');\n  });\n});","define('cti-stix-ui/tests/integration/components/relationships-graph-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | integration/components/relationships-graph-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/relationships-graph-test.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/mixins/add-remove-external-references.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | mixins/add-remove-external-references.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'mixins/add-remove-external-references.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/mixins/add-remove-kill-chain-phases.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | mixins/add-remove-kill-chain-phases.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'mixins/add-remove-kill-chain-phases.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/mixins/add-remove-labels.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | mixins/add-remove-labels.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'mixins/add-remove-labels.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/mixins/delete-object-action.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | mixins/delete-object-action.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'mixins/delete-object-action.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/mixins/report-dashboard-mitigation.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | mixins/report-dashboard-mitigation.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'mixins/report-dashboard-mitigation.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/mixins/report-dashboard-model.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | mixins/report-dashboard-model.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'mixins/report-dashboard-model.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/models/attack-pattern.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | models/attack-pattern.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/attack-pattern.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/models/course-of-action.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | models/course-of-action.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/course-of-action.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/models/indicator.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | models/indicator.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/indicator.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/models/malware.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | models/malware.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/malware.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/models/marking-definition.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | models/marking-definition.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/marking-definition.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/models/relationship.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | models/relationship.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/relationship.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/models/report.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | models/report.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/report.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/models/threat-actor.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | models/threat-actor.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/threat-actor.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/models/tool.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | models/tool.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/tool.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/resolver.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | resolver.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'resolver.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/router.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | router.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/routes/application.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/application.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/application.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/routes/attack-pattern-new.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/attack-pattern-new.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/attack-pattern-new.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/routes/attack-pattern.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/attack-pattern.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/attack-pattern.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/routes/attack-patterns.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/attack-patterns.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/attack-patterns.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/routes/course-of-action-new.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/course-of-action-new.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/course-of-action-new.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/routes/course-of-action.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/course-of-action.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/course-of-action.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/routes/course-of-actions.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/course-of-actions.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/course-of-actions.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/routes/indicator.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/indicator.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/indicator.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/routes/indicators.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/indicators.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/indicators.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/routes/item.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/item.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/item.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/routes/malware.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/malware.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/malware.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/routes/relationship-grid.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/relationship-grid.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/relationship-grid.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/routes/relationship-new.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/relationship-new.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/relationship-new.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/routes/relationship.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/relationship.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/relationship.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/routes/relationships.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/relationships.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/relationships.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/routes/report-dashboard.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/report-dashboard.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/report-dashboard.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/routes/report-kill-chain-phase.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/report-kill-chain-phase.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/report-kill-chain-phase.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/routes/report-mitigates-rating.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/report-mitigates-rating.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/report-mitigates-rating.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/routes/report-new.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/report-new.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/report-new.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/routes/report.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/report.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/report.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/routes/reports.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/reports.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/reports.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/routes/threat-actor-new.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/threat-actor-new.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/threat-actor-new.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/routes/threat-actor.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/threat-actor.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/threat-actor.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/routes/threat-actors.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/threat-actors.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/threat-actors.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/routes/tool.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | routes/tool.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/tool.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/serializers/application.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | serializers/application.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'serializers/application.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/services/attack-pattern.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | services/attack-pattern.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'services/attack-pattern.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/services/course-of-action.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | services/course-of-action.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'services/course-of-action.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/services/granular-marking.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | services/granular-marking.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'services/granular-marking.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/test-helper', ['exports', 'cti-stix-ui/tests/helpers/resolver', 'ember-qunit'], function (exports, _ctiStixUiTestsHelpersResolver, _emberQunit) {\n\n  (0, _emberQunit.setResolver)(_ctiStixUiTestsHelpersResolver['default']);\n});","define('cti-stix-ui/tests/test-helper.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | test-helper.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/transitions.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | transitions.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'transitions.js should pass jshint.');\n  });\n});","define('cti-stix-ui/tests/unit/routes/attack-patterns-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:attack-patterns', 'Unit | Route | attack patterns', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('cti-stix-ui/tests/unit/routes/attack-patterns-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint | unit/routes/attack-patterns-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/attack-patterns-test.js should pass jshint.');\n  });\n});","/* jshint ignore:start */\n\nrequire('cti-stix-ui/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n\n/* jshint ignore:end */\n"],"names":[],"mappingsxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChjfile":"tests.js"}